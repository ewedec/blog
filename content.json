{"meta":{"title":"超哥博客","subtitle":"打造码农的世界","description":null,"author":"Dingchao.Wu","url":"https://ewedwc.github.io"},"pages":[{"title":"Linux基础","date":"2018-11-12T12:29:55.000Z","updated":"2018-11-12T12:31:35.580Z","comments":true,"path":"Linux基础/index.html","permalink":"https://ewedwc.github.io/Linux基础/index.html","excerpt":"","text":""},{"title":"Python开发","date":"2018-11-12T12:42:21.000Z","updated":"2018-11-12T12:47:43.054Z","comments":true,"path":"Python开发/index.html","permalink":"https://ewedwc.github.io/Python开发/index.html","excerpt":"","text":""},{"title":"工具","date":"2018-11-12T12:44:27.000Z","updated":"2018-11-12T12:47:14.255Z","comments":true,"path":"工具/index.html","permalink":"https://ewedwc.github.io/工具/index.html","excerpt":"","text":""},{"title":"数据库","date":"2018-11-12T12:43:55.000Z","updated":"2018-11-12T12:47:38.952Z","comments":true,"path":"数据库/index.html","permalink":"https://ewedwc.github.io/数据库/index.html","excerpt":"","text":""},{"title":"运维之路","date":"2018-11-12T12:44:22.000Z","updated":"2018-11-12T12:48:07.275Z","comments":true,"path":"运维之路/index.html","permalink":"https://ewedwc.github.io/运维之路/index.html","excerpt":"","text":""}],"posts":[{"title":"Docker基础","slug":"Docker基础","date":"2018-11-14T02:52:58.000Z","updated":"2018-11-14T06:57:30.563Z","comments":true,"path":"categories/1d9fbb6a.html","link":"","permalink":"https://ewedwc.github.io/categories/1d9fbb6a.html","excerpt":"","text":"1.安装Docker linux安装Docker12345678#安装curl命令sudo apt-get install curl#安装Dockercurl -fsSl https://get.Docker.com |sh#检查Dockersudo docker version#将当前用户添加到docker组中免敲sudo命令sudo useradd -aG docker 当前用户名 1234567#使用不同的的源 官方源: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) st able&quot;阿里云的源&#123;推荐&#125; curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add - add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_relea se -cs) stable&quot; Mac安装Docker 1官网下载Docker for Mac 进行安装 Docker 删除 123apt-get purge docke-ce -yrm -rf /var/lib/docer/rm - rf /etc/docker Docker加速器&emsp;&emsp;在国内使用docker的官方镜像源，会因为网络的原因，造成无法下载，或者一直处于超时。所以我们使用 daocloud 的方法进行加速配置。 2.Docker介绍 Docker是什么Docker是一个开源的容器引擎，它基于LXC（LXC又名Linux container，是一种虚拟化的解决方案，这种是内核级的虚拟化。(主流的解决方案Xen ,KVM, LXC)）容器技术，使用GO语言开发。遵循Apache2.0协议。Docker采用C/S架构，其可以为任何应用创建一个轻量级、可移植的、自给自足的容器。Docker就是一种快速解决生产问题的一种技术手段。 Docker的特点 三大理念：构建:&emsp;&emsp;将你需要的场景构建好，装在一个镜像中，就好比龙珠中的胶囊一样。运输:&emsp;&emsp;随身携带非常方便运行:&emsp;&emsp;只要在需要的地方一放，打开使用就OK了 优点:&emsp;&emsp;多: 试用场景多&emsp;&emsp;快: 环境部署快，更新快&emsp;&emsp;好: 好多人在用，东西好&emsp;&emsp;省: 省钱省力省人工 缺点:&emsp;&emsp;太腻歪人: 依赖操作系统&emsp;&emsp;不善于沟通: 依赖网络&emsp;&emsp;无法使用外部硬件","categories":[{"name":"运维之路","slug":"运维之路","permalink":"https://ewedwc.github.io/categories/运维之路/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://ewedwc.github.io/tags/docker/"}],"keywords":[{"name":"运维之路","slug":"运维之路","permalink":"https://ewedwc.github.io/categories/运维之路/"}]},{"title":"Python输出各类三角形","slug":"Python输出各类三角形","date":"2018-11-13T10:50:34.000Z","updated":"2018-11-13T14:31:59.377Z","comments":true,"path":"categories/db7c6f16.html","link":"","permalink":"https://ewedwc.github.io/categories/db7c6f16.html","excerpt":"","text":"Python输出各类三角形 今天面试被问了这个问题先将这类问题做个总结 1.打印左下角三角形：代码如下: 12345678910111213141516for i in range(n): for j in range(0,i): print(&quot;*&quot;end=&quot; &quot;) for k in range(i,n): print(&quot; &quot;,end=&quot; &quot;) print(&quot;&quot;) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 2.打印右上角三角形：代码如下: 1234567891011121314151617for i in range(n): for j in range(0,i): print(&quot; &quot;,end=&quot; &quot;) for k in range(i,n): print(&quot;*&quot;,end=&quot; &quot;) print(&quot; &quot;) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 3.打印等腰三角形代码如下: 12345678910111213141516171819def A(n): for i in range(n): for j in range(0, i): print(end=&quot; &quot;) for k in range(i, n): print(&quot;*&quot;, end=&quot; &quot;) print(&quot;&quot;)A(10) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 4.打印等腰三角形代码如下: 1234567891011121314151617def A(n): for i in range(n): for j range(0,n-i): print(ent=&quot; &quot;) for k range(n-i,n): print(&quot;*&quot;,ent=&quot; &quot;) print(&quot;&quot;) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *","categories":[{"name":"Python开发","slug":"Python开发","permalink":"https://ewedwc.github.io/categories/Python开发/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://ewedwc.github.io/tags/Python/"}],"keywords":[{"name":"Python开发","slug":"Python开发","permalink":"https://ewedwc.github.io/categories/Python开发/"}]},{"title":"冒泡排序","slug":"冒泡排序","date":"2018-11-13T09:40:17.000Z","updated":"2018-11-13T10:45:28.524Z","comments":true,"path":"categories/14e6f1eb.html","link":"","permalink":"https://ewedwc.github.io/categories/14e6f1eb.html","excerpt":"","text":"冒泡排序 冒泡排序的思想：每次比较两个相邻的元素，如果它们前一个比后一个大就交换俩个元素的位置，如果后一个元素比前一个元素大不处理。 代码思想:利用两个for循环进行操作，第一个for循环记录循环次数，第二个循环列表中未归位的最大的元素，已经归位的元素不再参与比较。 Python代码实现123456789#!/usr/bin/env Pythondef bubbleSort(nums) for i in range(len(nums)-1) for j in range(len(nums)-i-1) if nums[j]&gt;nums[j+1] nums[j],num[j+1] = nums[j+1],num[j] return numsnums = [5,2,4,1,6,1]print (bubbleSort(nums))","categories":[{"name":"Python开发","slug":"Python开发","permalink":"https://ewedwc.github.io/categories/Python开发/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://ewedwc.github.io/tags/Python/"},{"name":"算法","slug":"算法","permalink":"https://ewedwc.github.io/tags/算法/"}],"keywords":[{"name":"Python开发","slug":"Python开发","permalink":"https://ewedwc.github.io/categories/Python开发/"}]}]}